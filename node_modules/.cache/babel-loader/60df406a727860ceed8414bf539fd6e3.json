{"ast":null,"code":"module.exports = {\n  compareTwoStrings: compareTwoStrings,\n  findBestMatch: findBestMatch\n};\n\nfunction compareTwoStrings(first, second) {\n  first = first.replace(/\\s+/g, '');\n  second = second.replace(/\\s+/g, '');\n  if (first === second) return 1; // identical or empty\n\n  if (first.length < 2 || second.length < 2) return 0; // if either is a 0-letter or 1-letter string\n\n  var firstBigrams = new Map();\n\n  for (var i = 0; i < first.length - 1; i++) {\n    var bigram = first.substring(i, i + 2);\n    var count = firstBigrams.has(bigram) ? firstBigrams.get(bigram) + 1 : 1;\n    firstBigrams.set(bigram, count);\n  }\n\n  ;\n  var intersectionSize = 0;\n\n  for (var _i = 0; _i < second.length - 1; _i++) {\n    var _bigram = second.substring(_i, _i + 2);\n\n    var _count = firstBigrams.has(_bigram) ? firstBigrams.get(_bigram) : 0;\n\n    if (_count > 0) {\n      firstBigrams.set(_bigram, _count - 1);\n      intersectionSize++;\n    }\n  }\n\n  return 2.0 * intersectionSize / (first.length + second.length - 2);\n}\n\nfunction findBestMatch(mainString, targetStrings) {\n  if (!areArgsValid(mainString, targetStrings)) throw new Error('Bad arguments: First argument should be a string, second should be an array of strings');\n  var ratings = [];\n  var bestMatchIndex = 0;\n\n  for (var i = 0; i < targetStrings.length; i++) {\n    var currentTargetString = targetStrings[i];\n    var currentRating = compareTwoStrings(mainString, currentTargetString);\n    ratings.push({\n      target: currentTargetString,\n      rating: currentRating\n    });\n\n    if (currentRating > ratings[bestMatchIndex].rating) {\n      bestMatchIndex = i;\n    }\n  }\n\n  var bestMatch = ratings[bestMatchIndex];\n  return {\n    ratings: ratings,\n    bestMatch: bestMatch,\n    bestMatchIndex: bestMatchIndex\n  };\n}\n\nfunction areArgsValid(mainString, targetStrings) {\n  if (typeof mainString !== 'string') return false;\n  if (!Array.isArray(targetStrings)) return false;\n  if (!targetStrings.length) return false;\n  if (targetStrings.find(function (s) {\n    return typeof s !== 'string';\n  })) return false;\n  return true;\n}","map":null,"metadata":{},"sourceType":"module"}